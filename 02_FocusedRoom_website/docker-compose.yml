version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - SECRET_KEY=${SECRET_KEY:-dev-secret-change-in-production}
      - DATABASE_URL=${DATABASE_URL:-sqlite:///instance/focusedroom.db}
      - MAIL_SERVER=${MAIL_SERVER:-}
      - MAIL_PORT=${MAIL_PORT:-}
      - MAIL_USERNAME=${MAIL_USERNAME:-}
      - MAIL_PASSWORD=${MAIL_PASSWORD:-}
      - MAIL_DEFAULT_SENDER=${MAIL_DEFAULT_SENDER:-}
      - GEMINI_API_KEY=${GEMINI_API_KEY:-}
    volumes:
      - ./instance:/app/instance
      - ./.env:/app/.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # PostgreSQL for production-like local testing (optional)
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=focusedroom
      - POSTGRES_PASSWORD=focusedroom_dev
      - POSTGRES_DB=focusedroom
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U focusedroom"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
